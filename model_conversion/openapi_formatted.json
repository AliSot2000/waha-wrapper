{
    "components": {
        "schemas": {
            "Base64File": {
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "mimetype": {
                        "type": "string"
                    }
                },
                "required": [
                    "mimetype",
                    "data"
                ],
                "type": "object"
            },
            "BinaryFile": {
                "properties": {
                    "data": {
                        "description": "Base64-encoded data of the file",
                        "example": "/9j/4AAQSkZJRgABAQAAAQABAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIADAAyAMBIgACEQEDEQH/xAAbAAABBQEBAAAAAAAAAAAAAAAAAwQFBgcCAf/EADwQAAEDBAECAwQGBwkBAAAAAAECAwQABQYRIRIxB0FRExQiYRUlcXOBkQgnMjNCdbEWJENSdJKhssHh/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AMg8UfEO755kUqVMlPJtocUIkILIbab3x8PYqI5JPO/lqqVuk90boFN0bpPdTrOLXR7DJGUobZ+iGJYhLWXR1h0gEDp76+Ic0ENujdJ7o3QKbo3Se6N0Etjh+v7f98mtT3WUY4fr+3/fJrU90Cm6N1INWOc7jj18Qlv6PZfEdaisdXWda+H05HNcSLNcY9njXV6KtFukrLbL5I6VqG9gc7/hPl5UDLdG6kLtZJ1qgWyZMS2li4tF6OUrCiUjXceXcVF7oFN0bpPdG6BTdG6T3RugU3Ruk90boFN0bpPdG6BTde7pLdG6C04Rl1wxe7sPx33DDKwJEYqJQ4jz48iB2NFVbdFBi26N0nuvCdgj1GqDX7PguKY/h1ryLxMuN0bVd0lyBa7WhPtlND/EWpXAB2DrjgjueBZr+jGW/wBGq7qw2Vc3rYu/NKUm5NpQ60vpRtJKeFDWjv5/Ko7x8t0y+454e5HZ4z8q0LsbUQrYbK0tOo7pVrseSPtSfSvHLLc7N+ipc0XaBIhOSb62+yiQgoUtspQArR50SD39KCFRh2IYjYbVO8SJ13Xc7qwJUe02kNpW0wf2VurXwCeeB6efOvL9hOKi1WLLLBdLk9hky4JgT0yEoEuAvudkDpV8PPb07740zxhyq8xoOO5HjmO2G8Y7PtrPTLkWpMpbLg3ttau6QPIHz6h5VlmXZhmN88PnY8/HbfbcZXLbUp2JbPdULe0ekA70o6Sd6B4FBB+LOHnBM3m2ZDrj8NKUPxX1626yobB44JB6gdelPPEPDYWH45ihekyV5DdYnv0uMrp9nHaV+7AGt9R89n+E1q2LY+14xYdgdwlLQZWOy/o28KWoAqhoHtEqO/klKftWr0rFvFfKzmef3e8pJ92dd9nFT5JYR8KBry2Bv7SaCHxw/X9v++TWqbrJ8cP1/b/vk1qm6DRref1GXb+cN/0RURdLMY3h5Y7x9Iznfe5LrXujjm2Gukq+JCfInXP2mpS3H9RV2/nDf/VFGQH9SuKf6+R/VygcZ5HfmYx4dxojS3pD0AobbQNqUo9GgBUBltkteNssW1ya7LyXQXLaYKSxFB7IJ1tS+3AP/m9GXl9uxPHsCenW1x/3i3Kacmtr05EaISFFseatlJ9dJNZxlWNKxK7Q5zbxuNllOJlRZwPX7wnqCiFHzXrv69/XQSM+z4riYjxcwk3WTeXWkvOQ7aEARUq5AWpXdWvIf/TH5bYIMK12y949MdmWW5BYaL6Ql1pxPdtYHG+D+R+03vxUv97t99FwtVmsVwsk9lt6NOdt4fUv4RsKWPP035EVTrjdciv8Ozw8gt8K12F2ehLbkaH7uOtXCiN9/hUTvWt0HKJXhnHbQ1IlZNKf6R1usNIShKtc6BAJG6a5xjjOPy4DlvmGba7jHTKiPKT0qKD5KHqNj86t2a3e/YrlDthw6ww4ENgISw6IHt3ZO0glXUQd8kj145pDxqXPVGw5V4HTcjbyZI6QnTm0dXA4HPkKDjKccwbD7yIt8u93lKW0lxMSGykuoBH7S16CdHyA54qCzjHINrttsvePTXJtiuSFFlbqdONrT3Qrt6H8iKmvHKBMXnftm4clTbkRhKVoZUQogHYBA5pLNWl2Lwoxyx3BJaub7709TCuFtNnqA6h5b6h/z6UC+RYdiuNuwXb5kj8aPJioeTGba9rJWo9yABpKO2iRyd1GWrG7FKYvF+kXSU1iMBxLbb/sv7xJWQNISkjg7Ou3mPmQ58bgn6fsqtDq+h443+KqVtDSr34KXCBbkKem225pmPMoG1ltSeFADv3P+00DeLYsYyqFP/sXJurN1hMmQYNySnb7Y7lCk+fbj5j13VDCtjYrRPBWM7CyCZf5ra2bXbYTyn33ElKdkD4dnueCdfKs4UvqUVa6eo716b8qDvdFJ7ooMW3Rurt4seHF5wDI5caZEeVay4oxJoQS263v4fi7BQHBB538tGqJ1UFzw/xKy7DobkTHL5IhxHFFRZ6UOICj3ISsEJP2U1vWeZPe7fKg3e+TZsSU+JLzby+oKcAAB7caAGgNDjtVW6qOqgtuI+IOVYe2tvHL5LhMrV1KZSQtsn16FAjfz1XmXeIGU5g2hvJL5LnMoV1pZUQlsK9ehICd8nnXnVT6qOqgnrFlV7sEK5Q7Nc5EONcW/ZS22lAB1OiNH8FKHHrUNukuqjqoJbHD9fQPvk1qnVWUY2fr6B98mtS3QP0XW4otq7Yia4m2OOB5cUAdKnBrSvXfA/Kh263F63sW56a4u3R1FbMYgdLajvZHnzs/nTHdG6B9LulwnR4sedNckR4iPZxm1gaZRx8I19g7+ldM3i6M2hdobnu/RCle09zUApCVb3tOxtPPPHz9aj90boJyw5bkmOslixXuRFjEkiOoJcbST30lQOvwpvesgvV/WF3+6yZ+t9KHCAhG+/SkaAqL3RugszOfZmxbU29nJJaYqU9CT0pLqU+gc11fjvdREy7XK4oit3Oe/MRFT7Nj2xBLaOON9z2HJphujdBq3iZ4gXmNl7pxHJvq5UZkaYKHmgvR6tbBAPbeqzKbMl3CW7Luct6bMe/ePPK6lK9B8h8hTRAShOkAJHoK63QP7jdbjdXW3btNcmOtNhptTgAKUDska8hs1zbLncLRORNs05+DMQOkOtHun/KodiPkaZbo3QTt/wAvyXI2UsX68vSoySFewSlLbaiOxUEgb/GobqpPdG6BTqoqyYFh9xy28x48aO6IQWDIklJCG0b5581EcACig//Z",
                        "type": "string"
                    },
                    "filename": {
                        "description": "Document file name. Optional",
                        "example": "filename.jpeg",
                        "type": "string"
                    },
                    "mimetype": {
                        "description": "MIME type of the attachment.",
                        "example": "image/jpeg",
                        "type": "string"
                    }
                },
                "required": [
                    "mimetype",
                    "data"
                ],
                "type": "object"
            },
            "CaptchaBody": {
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "code"
                ],
                "type": "object"
            },
            "ChatRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "session"
                ],
                "type": "object"
            },
            "Contact": {
                "properties": {
                    "fullName": {
                        "description": "The full name of the contact",
                        "example": "John Doe",
                        "type": "string"
                    },
                    "organization": {
                        "description": "The organization of the contact",
                        "example": "Company Name",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "The phone number of the contact",
                        "example": "+91 11111 11111",
                        "type": "string"
                    },
                    "vcard": {
                        "default": null,
                        "type": "string"
                    },
                    "whatsappId": {
                        "description": "The whatsapp id of the contact. DO NOT add + or @c.us",
                        "example": "911111111111",
                        "type": "string"
                    }
                },
                "required": [
                    "fullName",
                    "phoneNumber",
                    "vcard"
                ],
                "type": "object"
            },
            "ContactRequest": {
                "properties": {
                    "contactId": {
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "contactId",
                    "session"
                ],
                "type": "object"
            },
            "CreateGroupRequest": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "participants": {
                        "items": {
                            "$ref": "#/components/schemas/Participant"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "participants"
                ],
                "type": "object"
            },
            "CustomHeader": {
                "properties": {
                    "name": {
                        "example": "X-My-Custom-Header",
                        "type": "string"
                    },
                    "value": {
                        "example": "Value",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ],
                "type": "object"
            },
            "DescriptionRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "description"
                ],
                "type": "object"
            },
            "EditMessageRequest": {
                "properties": {
                    "text": {
                        "default": "Hello, world!",
                        "type": "object"
                    }
                },
                "required": [
                    "text"
                ],
                "type": "object"
            },
            "HmacConfiguration": {
                "properties": {
                    "key": {
                        "example": "your-secret-key",
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ],
                "type": "object"
            },
            "ImageStatus": {
                "properties": {
                    "caption": {
                        "type": "string"
                    },
                    "contacts": {
                        "default": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "description": "it is always necessary to inform the list of contacts that will have access to the posted status",
                        "example": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "type": "object"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BinaryFile"
                            },
                            {
                                "$ref": "#/components/schemas/RemoteFile"
                            }
                        ]
                    }
                },
                "required": [
                    "contacts",
                    "file",
                    "caption"
                ],
                "type": "object"
            },
            "MeInfo": {
                "properties": {
                    "id": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "pushName": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "pushName"
                ],
                "type": "object"
            },
            "MessageContactVcardRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "contacts": {
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/VCardContact"
                                },
                                {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "contacts",
                    "session"
                ],
                "type": "object"
            },
            "MessageDestination": {
                "properties": {
                    "from": {
                        "type": "string"
                    },
                    "fromMe": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Message ID",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "to",
                    "from",
                    "fromMe"
                ],
                "type": "object"
            },
            "MessageFileRequest": {
                "properties": {
                    "caption": {
                        "type": "string"
                    },
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RemoteFile"
                            },
                            {
                                "$ref": "#/components/schemas/BinaryFile"
                            }
                        ]
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "file",
                    "caption",
                    "session"
                ],
                "type": "object"
            },
            "MessageImageRequest": {
                "properties": {
                    "caption": {
                        "type": "string"
                    },
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RemoteFile"
                            },
                            {
                                "$ref": "#/components/schemas/BinaryFile"
                            }
                        ]
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "file",
                    "caption",
                    "session"
                ],
                "type": "object"
            },
            "MessageLinkPreviewRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    },
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "chatId",
                    "url",
                    "title",
                    "session"
                ],
                "type": "object"
            },
            "MessageLocationRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "chatId",
                    "latitude",
                    "longitude",
                    "title",
                    "session"
                ],
                "type": "object"
            },
            "MessagePoll": {
                "properties": {
                    "multipleAnswers": {
                        "default": false,
                        "type": "object"
                    },
                    "name": {
                        "example": "How are you?",
                        "type": "string"
                    },
                    "options": {
                        "example": [
                            "Awesome!",
                            "Good!",
                            "Not bad!"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "options",
                    "multipleAnswers"
                ],
                "type": "object"
            },
            "MessagePollRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/MessagePoll"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "poll",
                    "session"
                ],
                "type": "object"
            },
            "MessageReactionRequest": {
                "properties": {
                    "messageId": {
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "reaction": {
                        "description": "Emoji to react with. Send an empty string to remove the reaction",
                        "example": "\ud83d\udc4d",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "messageId",
                    "reaction",
                    "session"
                ],
                "type": "object"
            },
            "MessageReplyRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "reply_to": {
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    },
                    "text": {
                        "default": "Hi there!",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "reply_to",
                    "text",
                    "session"
                ],
                "type": "object"
            },
            "MessageStarRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "messageId": {
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    },
                    "star": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "messageId",
                    "chatId",
                    "star",
                    "session"
                ],
                "type": "object"
            },
            "MessageTextRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    },
                    "text": {
                        "default": "Hi there!",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "text",
                    "session"
                ],
                "type": "object"
            },
            "MessageVideoRequest": {
                "properties": {
                    "caption": {
                        "default": "Just watch at this!",
                        "type": "string"
                    },
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VideoRemoteFile"
                            },
                            {
                                "$ref": "#/components/schemas/VideoBinaryFile"
                            }
                        ]
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "file",
                    "caption",
                    "session"
                ],
                "type": "object"
            },
            "MessageVoiceRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VoiceRemoteFile"
                            },
                            {
                                "$ref": "#/components/schemas/VoiceBinaryFile"
                            }
                        ]
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "file",
                    "session"
                ],
                "type": "object"
            },
            "NowebConfig": {
                "properties": {
                    "store": {
                        "$ref": "#/components/schemas/NowebStoreConfig"
                    }
                },
                "type": "object"
            },
            "NowebStoreConfig": {
                "properties": {
                    "enabled": {
                        "default": false,
                        "description": "Enable or disable the store for contacts, chats, and messages.",
                        "type": "boolean"
                    },
                    "fullSync": {
                        "default": false,
                        "description": "Enable full sync on session initialization (when scanning QR code).\nFull sync will download all contacts, chats, and messages from the phone.\nIf disabled, only messages early than 90 days will be downloaded and some contacts may be missing.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "fullSync"
                ],
                "type": "object"
            },
            "OTPRequest": {
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "code"
                ],
                "type": "object"
            },
            "Participant": {
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "ParticipantsRequest": {
                "properties": {
                    "participants": {
                        "items": {
                            "$ref": "#/components/schemas/Participant"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "participants"
                ],
                "type": "object"
            },
            "PollVote": {
                "properties": {
                    "from": {
                        "type": "string"
                    },
                    "fromMe": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Message ID",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "selectedOptions": {
                        "description": "Option that user has selected",
                        "example": [
                            "Awesome!"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "timestamp": {
                        "description": "Timestamp, ms",
                        "example": 1692861369,
                        "type": "number"
                    },
                    "to": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "selectedOptions",
                    "timestamp",
                    "to",
                    "from",
                    "fromMe"
                ],
                "type": "object"
            },
            "PollVotePayload": {
                "properties": {
                    "poll": {
                        "$ref": "#/components/schemas/MessageDestination"
                    },
                    "vote": {
                        "$ref": "#/components/schemas/PollVote"
                    }
                },
                "required": [
                    "vote",
                    "poll"
                ],
                "type": "object"
            },
            "ProxyConfig": {
                "properties": {
                    "password": {
                        "example": null,
                        "type": "string"
                    },
                    "server": {
                        "example": "localhost:3128",
                        "type": "string"
                    },
                    "username": {
                        "example": null,
                        "type": "string"
                    }
                },
                "required": [
                    "server"
                ],
                "type": "object"
            },
            "QRCodeValue": {
                "properties": {
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ],
                "type": "object"
            },
            "RemoteFile": {
                "properties": {
                    "filename": {
                        "description": "Document file name. Value can be null",
                        "example": "filename.jpg",
                        "type": "string"
                    },
                    "mimetype": {
                        "description": "MIME type of the attachment.",
                        "example": "image/jpeg",
                        "type": "string"
                    },
                    "url": {
                        "example": "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.jpg",
                        "type": "string"
                    }
                },
                "required": [
                    "mimetype",
                    "url"
                ],
                "type": "object"
            },
            "RequestCodeRequest": {
                "properties": {
                    "method": {
                        "description": "How would you like to receive the one time code for registration? |sms|voice. Leave empty for Web pairing.",
                        "example": null,
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "Mobile phone number in international format",
                        "example": "12132132130",
                        "type": "string"
                    }
                },
                "required": [
                    "phoneNumber"
                ],
                "type": "object"
            },
            "RetriesConfiguration": {
                "properties": {
                    "attempts": {
                        "example": 15,
                        "type": "number"
                    },
                    "delaySeconds": {
                        "example": 2,
                        "type": "number"
                    }
                },
                "required": [
                    "delaySeconds",
                    "attempts"
                ],
                "type": "object"
            },
            "SendSeenRequest": {
                "properties": {
                    "chatId": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "messageId": {
                        "description": "NOWEB engine only - it's important to mark ALL messages as seen",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "participant": {
                        "description": "NOWEB engine only - the ID of the user that sent the  message (undefined for individual chats)",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "session": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "chatId",
                    "session"
                ],
                "type": "object"
            },
            "SessionConfig": {
                "properties": {
                    "debug": {
                        "default": false,
                        "type": "boolean"
                    },
                    "noweb": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NowebConfig"
                            }
                        ],
                        "example": {
                            "store": {
                                "enabled": true,
                                "fullSync": false
                            }
                        }
                    },
                    "proxy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProxyConfig"
                            }
                        ],
                        "example": null
                    },
                    "webhooks": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookConfig"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "debug"
                ],
                "type": "object"
            },
            "SessionDTO": {
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/SessionConfig"
                    },
                    "name": {
                        "default": "default",
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "STOPPED",
                            "STARTING",
                            "SCAN_QR_CODE",
                            "WORKING",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "status"
                ],
                "type": "object"
            },
            "SessionInfo": {
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/SessionConfig"
                    },
                    "engine": {
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "name": {
                        "default": "default",
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "STOPPED",
                            "STARTING",
                            "SCAN_QR_CODE",
                            "WORKING",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "status"
                ],
                "type": "object"
            },
            "SessionLogoutRequest": {
                "properties": {
                    "name": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "SessionStartRequest": {
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/SessionConfig"
                    },
                    "name": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "SessionStopRequest": {
                "properties": {
                    "logout": {
                        "default": false,
                        "description": "Stop and logout from the session.",
                        "example": false,
                        "type": "object"
                    },
                    "name": {
                        "default": "default",
                        "type": "object"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "SettingsSecurityChangeInfo": {
                "properties": {
                    "adminsOnly": {
                        "default": true,
                        "type": "boolean"
                    }
                },
                "required": [
                    "adminsOnly"
                ],
                "type": "object"
            },
            "SubjectRequest": {
                "properties": {
                    "subject": {
                        "type": "string"
                    }
                },
                "required": [
                    "subject"
                ],
                "type": "object"
            },
            "TextStatus": {
                "properties": {
                    "backgroundColor": {
                        "default": "#38b42f",
                        "type": "object"
                    },
                    "contacts": {
                        "default": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "description": "it is always necessary to inform the list of contacts that will have access to the posted status",
                        "example": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "type": "object"
                    },
                    "font": {
                        "default": 1,
                        "type": "object"
                    },
                    "text": {
                        "default": "Have a look! https://waha.devlike.pro/",
                        "type": "object"
                    }
                },
                "required": [
                    "contacts",
                    "text",
                    "backgroundColor",
                    "font"
                ],
                "type": "object"
            },
            "VCardContact": {
                "properties": {
                    "vcard": {
                        "description": "The vcard string",
                        "example": "BEGIN:VCARD\nVERSION:3.0\nFN:Jane Doe\nORG:Company Name;\nTEL;type=CELL;type=VOICE;waid=911111111111:+91 11111 11111\nEND:VCARD",
                        "type": "string"
                    }
                },
                "required": [
                    "vcard"
                ],
                "type": "object"
            },
            "VideoBinaryFile": {
                "properties": {
                    "data": {
                        "description": "Base64-encoded data of the file",
                        "example": "",
                        "type": "string"
                    },
                    "filename": {
                        "default": "video.mp4",
                        "description": "Document file name. Optional",
                        "type": "object"
                    },
                    "mimetype": {
                        "default": "video/mp4",
                        "description": "MIME type of the attachment.",
                        "type": "object"
                    }
                },
                "required": [
                    "mimetype",
                    "filename",
                    "data"
                ],
                "type": "object"
            },
            "VideoRemoteFile": {
                "properties": {
                    "filename": {
                        "default": "video.mp4",
                        "description": "Document file name. Optional",
                        "type": "object"
                    },
                    "mimetype": {
                        "default": "video/mp4",
                        "description": "MIME type of the attachment.",
                        "type": "object"
                    },
                    "url": {
                        "example": "https://github.com/devlikeapro/waha/raw/core/examples/video.mp4",
                        "type": "string"
                    }
                },
                "required": [
                    "mimetype",
                    "filename",
                    "url"
                ],
                "type": "object"
            },
            "VideoStatus": {
                "properties": {
                    "caption": {
                        "type": "string"
                    },
                    "contacts": {
                        "default": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "description": "it is always necessary to inform the list of contacts that will have access to the posted status",
                        "example": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "type": "object"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BinaryFile"
                            },
                            {
                                "$ref": "#/components/schemas/RemoteFile"
                            }
                        ]
                    }
                },
                "required": [
                    "contacts",
                    "file",
                    "caption"
                ],
                "type": "object"
            },
            "VoiceBinaryFile": {
                "properties": {
                    "data": {
                        "description": "Base64-encoded data of the file",
                        "example": "",
                        "type": "string"
                    },
                    "filename": {
                        "default": "voice-message.mp3",
                        "description": "Document file name. Optional",
                        "type": "object"
                    },
                    "mimetype": {
                        "default": "audio/ogg; codecs=opus",
                        "description": "MIME type of the attachment.",
                        "type": "object"
                    }
                },
                "required": [
                    "mimetype",
                    "filename",
                    "data"
                ],
                "type": "object"
            },
            "VoiceRemoteFile": {
                "properties": {
                    "mimetype": {
                        "default": "audio/ogg; codecs=opus",
                        "description": "MIME type of the attachment.",
                        "type": "object"
                    },
                    "url": {
                        "example": "https://github.com/devlikeapro/waha/raw/core/examples/dev.likeapro.opus",
                        "type": "string"
                    }
                },
                "required": [
                    "mimetype",
                    "url"
                ],
                "type": "object"
            },
            "VoiceStatus": {
                "properties": {
                    "backgroundColor": {
                        "default": "#38b42f",
                        "type": "object"
                    },
                    "contacts": {
                        "default": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "description": "it is always necessary to inform the list of contacts that will have access to the posted status",
                        "example": [
                            "55xxxxxxxxxxx@c.us"
                        ],
                        "type": "object"
                    },
                    "file": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/VoiceBinaryFile"
                            },
                            {
                                "$ref": "#/components/schemas/VoiceRemoteFile"
                            }
                        ]
                    }
                },
                "required": [
                    "contacts",
                    "file",
                    "backgroundColor"
                ],
                "type": "object"
            },
            "WAHAChatPresences": {
                "properties": {
                    "id": {
                        "description": "Chat ID - either group id or contact id",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "presences": {
                        "items": {
                            "$ref": "#/components/schemas/WAHAPresenceData"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "presences"
                ],
                "type": "object"
            },
            "WAHAEnvironment": {
                "properties": {
                    "browser": {
                        "example": "/usr/path/to/bin/google-chrome",
                        "type": "string"
                    },
                    "engine": {
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "tier": {
                        "example": "PLUS",
                        "type": "string"
                    },
                    "version": {
                        "example": "2029.10.29",
                        "type": "string"
                    }
                },
                "required": [
                    "version",
                    "engine",
                    "tier",
                    "browser"
                ],
                "type": "object"
            },
            "WAHAPresenceData": {
                "properties": {
                    "lastKnownPresence": {
                        "enum": [
                            "offline",
                            "online",
                            "typing",
                            "recording",
                            "paused"
                        ],
                        "type": "string"
                    },
                    "lastSeen": {
                        "example": 1686568773,
                        "type": "number"
                    },
                    "participant": {
                        "description": "Chat ID - participant or contact id",
                        "example": "11111111111@c.us",
                        "type": "string"
                    }
                },
                "required": [
                    "participant",
                    "lastKnownPresence"
                ],
                "type": "object"
            },
            "WAHASessionPresence": {
                "properties": {
                    "chatId": {
                        "description": "Chat ID - either group id or contact id",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "presence": {
                        "enum": [
                            "offline",
                            "online",
                            "typing",
                            "recording",
                            "paused"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "chatId",
                    "presence"
                ],
                "type": "object"
            },
            "WAHAWebhookGroupJoin": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "group.join",
                        "description": "Some one join a group.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookGroupLeave": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "group.leave",
                        "description": "Some one left a group.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookMessage": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "message",
                        "description": "Incoming message.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAMessage"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookMessageAck": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "message.ack",
                        "description": "Receive events when server or recipient gets the message, read or played it.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAMessageAckBody"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookMessageAny": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "message.any",
                        "description": "Fired on all message creations, including your own.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAMessage"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookMessageReaction": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "message.reaction",
                        "description": "The event is triggered when a user reacts or removes a reaction.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAMessageReaction"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookMessageRevoked": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "message.revoked",
                        "description": "The event is triggered when a user, whether it be you or any other participant, revokes a previously sent message.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAMessageRevokedBody"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookPollVote": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "poll.vote",
                        "description": "With this event, you receive new votes for the poll sent.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/PollVotePayload"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookPollVoteFailed": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "poll.vote.failed",
                        "description": "There may be cases when it fails to decrypt a vote from the user. Read more about how to handle such events in the documentations.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/PollVotePayload"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookPresenceUpdate": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "presence.update",
                        "description": "The most recent presence information for a chat.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WAHAChatPresences"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookSessionStatus": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "session.status",
                        "description": "The event is triggered when the session status changes.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/WASessionStatusBody"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WAHAWebhookStateChange": {
                "properties": {
                    "engine": {
                        "enum": [
                            "VENOM",
                            "WEBJS",
                            "NOWEB"
                        ],
                        "example": "WEBJS",
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/WAHAEnvironment"
                    },
                    "event": {
                        "default": "state.change",
                        "description": "It\u2019s an internal engine\u2019s state, not session status.",
                        "enum": [
                            "session.status",
                            "message",
                            "message.reaction",
                            "message.any",
                            "message.ack",
                            "message.revoked",
                            "state.change",
                            "group.join",
                            "group.leave",
                            "presence.update",
                            "poll.vote",
                            "poll.vote.failed"
                        ],
                        "type": "object"
                    },
                    "me": {
                        "$ref": "#/components/schemas/MeInfo"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "session": {
                        "example": "default",
                        "type": "string"
                    }
                },
                "required": [
                    "session",
                    "engine",
                    "event",
                    "payload",
                    "environment"
                ],
                "type": "object"
            },
            "WALocation": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object"
            },
            "WAMedia": {
                "properties": {
                    "filename": {
                        "description": "The original filename in mediaUrl in the message if any",
                        "example": "example.pdf",
                        "type": "string"
                    },
                    "mimetype": {
                        "description": "mimetype for the media in the message if any",
                        "example": "audio/jpeg",
                        "type": "string"
                    },
                    "url": {
                        "description": "The URL for the media in the message if any",
                        "example": "http://localhost:3000/api/files/false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA.oga",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "WAMessage": {
                "properties": {
                    "_data": {
                        "description": "Message in a raw format that we get from WhatsApp. May be changed anytime, use it with caution! It depends a lot on the underlying backend.",
                        "type": "object"
                    },
                    "ack": {
                        "description": "ACK status for the message",
                        "enum": [
                            -1,
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "ackName": {
                        "description": "ACK status name for the message",
                        "type": "string"
                    },
                    "author": {
                        "description": "If the message was sent to a group, this field will contain the user that sent the message.",
                        "type": "string"
                    },
                    "body": {
                        "description": "Message content",
                        "type": "string"
                    },
                    "from": {
                        "description": "ID for the Chat that this message was sent to, except if the message was sent by the current user ",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "fromMe": {
                        "description": "Indicates if the message was sent by the current user",
                        "type": "boolean"
                    },
                    "hasMedia": {
                        "description": "Indicates if the message has media available for download",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Message ID",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WALocation"
                            }
                        ],
                        "description": "Location information contained in the message, if the message is type \"location\""
                    },
                    "media": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WAMedia"
                            }
                        ],
                        "default": null
                    },
                    "mediaUrl": {
                        "deprecated": true,
                        "description": "Use `media.url` instead! The URL for the media in the message if any",
                        "example": "http://localhost:3000/api/files/false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA.oga",
                        "type": "string"
                    },
                    "participant": {
                        "description": "For groups - participant who sent the message",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Unix timestamp for when the message was created",
                        "example": 1666943582,
                        "type": "number"
                    },
                    "to": {
                        "description": "\n* ID for who this message is for.\n* If the message is sent by the current user, it will be the Chat to which the message is being sent.\n* If the message is sent by another user, it will be the ID for the current user.\n",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "vCards": {
                        "description": "List of vCards contained in the message.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "timestamp",
                    "from",
                    "fromMe",
                    "to",
                    "participant",
                    "body",
                    "hasMedia",
                    "mediaUrl",
                    "ack",
                    "ackName"
                ],
                "type": "object"
            },
            "WAMessageAckBody": {
                "properties": {
                    "ack": {
                        "enum": [
                            -1,
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "ackName": {
                        "type": "string"
                    },
                    "from": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "fromMe": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Message ID",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "participant": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "to": {
                        "example": "11111111111@c.us",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "from",
                    "to",
                    "participant",
                    "fromMe",
                    "ack",
                    "ackName"
                ],
                "type": "object"
            },
            "WAMessageReaction": {
                "properties": {
                    "from": {
                        "description": "ID for the Chat that this message was sent to, except if the message was sent by the current user ",
                        "example": "11111111111@c.us",
                        "type": "string"
                    },
                    "fromMe": {
                        "description": "Indicates if the message was sent by the current user",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "Message ID",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "participant": {
                        "description": "For groups - participant who sent the message",
                        "type": "string"
                    },
                    "reaction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WAReaction"
                            }
                        ],
                        "description": "Reaction to the message. Either the reaction (emoji) or empty string to remove the reaction"
                    },
                    "timestamp": {
                        "description": "Unix timestamp for when the message was created",
                        "example": 1666943582,
                        "type": "number"
                    },
                    "to": {
                        "description": "\n* ID for who this message is for.\n* If the message is sent by the current user, it will be the Chat to which the message is being sent.\n* If the message is sent by another user, it will be the ID for the current user.\n",
                        "example": "11111111111@c.us",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "timestamp",
                    "from",
                    "fromMe",
                    "to",
                    "participant",
                    "reaction"
                ],
                "type": "object"
            },
            "WAMessageRevokedBody": {
                "properties": {
                    "after": {
                        "$ref": "#/components/schemas/WAMessage"
                    },
                    "before": {
                        "$ref": "#/components/schemas/WAMessage"
                    }
                },
                "type": "object"
            },
            "WANumberExistResult": {
                "properties": {
                    "chatId": {
                        "example": "Chat id for the phone number. Undefined if the number does not exist",
                        "type": "string"
                    },
                    "numberExists": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "numberExists"
                ],
                "type": "object"
            },
            "WAReaction": {
                "properties": {
                    "messageId": {
                        "description": "Message ID for the message to react to",
                        "example": "false_11111111111@c.us_AAAAAAAAAAAAAAAAAAAA",
                        "type": "string"
                    },
                    "text": {
                        "description": "Reaction to the message. Either the reaction (emoji) or empty string to remove the reaction",
                        "type": "string"
                    }
                },
                "required": [
                    "text",
                    "messageId"
                ],
                "type": "object"
            },
            "WASessionStatusBody": {
                "properties": {
                    "name": {
                        "example": "default",
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "STOPPED",
                            "STARTING",
                            "SCAN_QR_CODE",
                            "WORKING",
                            "FAILED"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "status"
                ],
                "type": "object"
            },
            "WebhookConfig": {
                "properties": {
                    "customHeaders": {
                        "example": null,
                        "items": {
                            "$ref": "#/components/schemas/CustomHeader"
                        },
                        "type": "array"
                    },
                    "events": {
                        "example": [
                            "message",
                            "session.status"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "hmac": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HmacConfiguration"
                            }
                        ],
                        "example": null
                    },
                    "retries": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RetriesConfiguration"
                            }
                        ],
                        "example": null
                    },
                    "url": {
                        "example": "https://httpbin.org/post",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "events"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "api_key": {
                "description": "Your secret api key",
                "in": "header",
                "name": "X-Api-Key",
                "type": "apiKey"
            }
        }
    },
    "externalDocs": {
        "description": "WAHA - WhatsApp API",
        "url": "https://waha.devlike.pro/"
    },
    "info": {
        "contact": {},
        "description": "WhatsApp API that you can run in a click!<br/><br/>Learn more:<ul><li><a href=\"https://waha.devlike.pro/\" target=\"_blank\">Documentation</a></li><li><a href=\"https://waha.devlike.pro/docs/how-to/engines/#features\" target=\"_blank\">Supported features in engines</a></li><li><a href=\"https://github.com/devlikeapro/waha\" target=\"_blank\">GitHub - WAHA Core</a></li><li><a href=\"https://github.com/devlikeapro/waha-plus\" target=\"_blank\">GitHub - WAHA Plus</a></li><li><b>NEW!</b> - <a href=\"/dashboard\">WAHA Dashboard</a></li><li><b>NEW!</b> - <a href=\"https://waha.devlike.pro/docs/how-to/waha-dashboard\">WAHA Dashboard Documentation</a></li></ul><p>Support the project and get WAHA Plus version!</p><ul><li><a href=\"https://waha.devlike.pro/docs/how-to/plus-version/\" target=\"_blank\">WAHA Plus</a></li><li><a href=\"https://patreon.com/wa_http_api/\" target=\"_blank\">Patreon</a></li><li><a href=\"https://boosty.to/wa-http-api/\" target=\"_blank\">Boosty</a></li><li><a href=\"https://portal.devlike.pro/\" target=\"_blank\">Patron Portal</a></li></ul>",
        "title": "WAHA - WhatsApp API",
        "version": "2024.6.4"
    },
    "openapi": "3.1.0",
    "paths": {
        "/api/checkNumberStatus": {
            "get": {
                "operationId": "ChattingController_checkNumberStatus",
                "parameters": [
                    {
                        "in": "query",
                        "name": "phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WANumberExistResult"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Check number status",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/contacts": {
            "get": {
                "operationId": "ContactsController_get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get contact basic info. The method always return result, even if the phone number is not registered in WhatsApp. For that - use /check-exists endpoint below.",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/about": {
            "get": {
                "operationId": "ContactsController_getAbout",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Gets the Contact's current \"about\" info. Returns null if you don't have permission to read their status.",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/all": {
            "get": {
                "operationId": "ContactsController_getAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get all contacts",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/block": {
            "post": {
                "operationId": "ContactsController_block",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Block contact",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/check-exists": {
            "get": {
                "operationId": "ContactsController_checkExists",
                "parameters": [
                    {
                        "in": "query",
                        "name": "phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WANumberExistResult"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Check phone number is registered in WhatsApp.",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/profile-picture": {
            "get": {
                "operationId": "ContactsController_getProfilePicture",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contactId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Returns the contact's profile picture URL, if privacy settings allow it.",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/contacts/unblock": {
            "post": {
                "operationId": "ContactsController_unblock",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Unblock contact",
                "tags": [
                    "contacts"
                ]
            }
        },
        "/api/messages": {
            "get": {
                "operationId": "ChattingController_getMessages",
                "parameters": [
                    {
                        "example": "11111111111@c.us",
                        "in": "query",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Download media for messages",
                        "example": true,
                        "in": "query",
                        "name": "downloadMedia",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get messages in a chat",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/reaction": {
            "put": {
                "operationId": "ChattingController_setReaction",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageReactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "React to a message with an emoji",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/reply": {
            "post": {
                "operationId": "ChattingController_reply",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageReplyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Reply to a text message",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/screenshot": {
            "get": {
                "operationId": "ScreenshotController_screenshot",
                "parameters": [
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Base64File"
                                        }
                                    ]
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "screenshot"
                ]
            }
        },
        "/api/sendContactVcard": {
            "post": {
                "operationId": "ChattingController_sendContactVcard",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageContactVcardRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendFile": {
            "post": {
                "operationId": "ChattingController_sendFile",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageFileRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send a file. Either from an URL or base64 data - look at the request schemas for details.",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendImage": {
            "post": {
                "operationId": "ChattingController_sendImage",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageImageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send an image. Either from an URL or base64 data - look at the request schemas for details.",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendLinkPreview": {
            "post": {
                "operationId": "ChattingController_sendLinkPreview",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageLinkPreviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendLocation": {
            "post": {
                "operationId": "ChattingController_sendLocation",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageLocationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendPoll": {
            "post": {
                "operationId": "ChattingController_sendPoll",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessagePollRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send a poll with options. You can use it as buttons replace",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendSeen": {
            "post": {
                "operationId": "ChattingController_sendSeen",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendSeenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendText": {
            "get": {
                "operationId": "ChattingController_sendTextGet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "text",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send a text message",
                "tags": [
                    "chatting"
                ]
            },
            "post": {
                "operationId": "ChattingController_sendText",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageTextRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WAMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send a text message",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendVideo": {
            "post": {
                "operationId": "ChattingController_sendVideo",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageVideoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send a video. Either from an URL or base64 data - look at the request schemas for details.",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sendVoice": {
            "post": {
                "operationId": "ChattingController_sendVoice",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageVoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send an voice message. Either from an URL or base64 data - look at the request schemas for details.",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/sessions": {
            "get": {
                "operationId": "SessionsController_list",
                "parameters": [
                    {
                        "description": "Return all sessions, including those that are in the STOPPED state.",
                        "example": false,
                        "in": "query",
                        "name": "all",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SessionInfo"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/sessions/logout": {
            "post": {
                "operationId": "SessionsController_clean",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionLogoutRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Logout from session.",
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/sessions/start": {
            "post": {
                "operationId": "SessionsController_start",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionStartRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionDTO"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/sessions/stop": {
            "post": {
                "operationId": "SessionsController_stop",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionStopRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Stop session",
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/sessions/{session}": {
            "get": {
                "operationId": "SessionsController_get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/sessions/{session}/me": {
            "get": {
                "operationId": "SessionController_getMe",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get information about the authenticated account",
                "tags": [
                    "sessions"
                ]
            }
        },
        "/api/star": {
            "put": {
                "operationId": "ChattingController_setStar",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageStarRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Star or unstar a message",
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/startTyping": {
            "post": {
                "operationId": "ChattingController_startTyping",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/stopTyping": {
            "post": {
                "operationId": "ChattingController_stopTyping",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "chatting"
                ]
            }
        },
        "/api/version": {
            "get": {
                "operationId": "VersionController_get",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WAHAEnvironment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "tags": [
                    "other"
                ]
            }
        },
        "/api/{session}/auth/authorize-code": {
            "post": {
                "operationId": "AuthController_authorizeCode",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OTPRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send OTP authentication code.",
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/{session}/auth/captcha": {
            "get": {
                "operationId": "AuthController_getCaptcha",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Base64File"
                                        }
                                    ]
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get captcha image.",
                "tags": [
                    "auth"
                ]
            },
            "post": {
                "operationId": "AuthController_saveCaptcha",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaptchaBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Enter captcha code.",
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/{session}/auth/qr": {
            "get": {
                "operationId": "AuthController_getQR",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": true,
                        "schema": {
                            "default": "image",
                            "enum": [
                                "image",
                                "raw"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/Base64File"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QRCodeValue"
                                        }
                                    ]
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get QR code for pairing WhatsApp Web.",
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/{session}/auth/request-code": {
            "post": {
                "operationId": "AuthController_requestCode",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Request authentication code.",
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/{session}/chats": {
            "get": {
                "operationId": "ChatsController_getChats",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get chats",
                "tags": [
                    "chats"
                ]
            }
        },
        "/api/{session}/chats/{chatId}": {
            "delete": {
                "operationId": "ChatsController_deleteChat",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Deletes the chat",
                "tags": [
                    "chats"
                ]
            }
        },
        "/api/{session}/chats/{chatId}/messages": {
            "delete": {
                "operationId": "ChatsController_clearMessages",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Clears all messages from the chat",
                "tags": [
                    "chats"
                ]
            },
            "get": {
                "operationId": "ChatsController_getChatMessages",
                "parameters": [
                    {
                        "description": "Download media for messages",
                        "example": true,
                        "in": "query",
                        "name": "downloadMedia",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "default": 100,
                            "type": "number"
                        }
                    },
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Gets messages in the chat",
                "tags": [
                    "chats"
                ]
            }
        },
        "/api/{session}/chats/{chatId}/messages/{messageId}": {
            "delete": {
                "operationId": "ChatsController_deleteMessage",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "description": "Chat ID",
                        "example": "123456789@c.us",
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Message ID",
                        "example": "true_123456789@c.us_BAE6A33293978B16",
                        "in": "path",
                        "name": "messageId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Deletes a message from the chat",
                "tags": [
                    "chats"
                ]
            },
            "put": {
                "operationId": "ChatsController_editMessage",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "description": "Chat ID",
                        "example": "123456789@c.us",
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Message ID",
                        "example": "true_123456789@c.us_BAE6A33293978B16",
                        "in": "path",
                        "name": "messageId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditMessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Edits a message in the chat",
                "tags": [
                    "chats"
                ]
            }
        },
        "/api/{session}/groups": {
            "get": {
                "operationId": "GroupsController_getGroups",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get all groups.",
                "tags": [
                    "groups"
                ]
            },
            "post": {
                "operationId": "GroupsController_createGroup",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Create a new group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}": {
            "delete": {
                "operationId": "GroupsController_deleteGroup",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Delete the group.",
                "tags": [
                    "groups"
                ]
            },
            "get": {
                "operationId": "GroupsController_getGroup",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get the group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/admin/demote": {
            "post": {
                "operationId": "GroupsController_demoteToAdmin",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Demotes participants by to regular users.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/admin/promote": {
            "post": {
                "operationId": "GroupsController_promoteToAdmin",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Promote participants to admin users.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/description": {
            "put": {
                "operationId": "GroupsController_setDescription",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DescriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Updates the group description.\nReturns true if the subject was properly updated. This can return false if the user does not have the necessary permissions.\n",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/invite-code": {
            "get": {
                "operationId": "GroupsController_getInviteCode",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Gets the invite code for a specific group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/invite-code/revoke": {
            "post": {
                "operationId": "GroupsController_revokeInviteCode",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Invalidates the current group invite code and generates a new one.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/leave": {
            "post": {
                "operationId": "GroupsController_leaveGroup",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Leave the group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/participants": {
            "get": {
                "operationId": "GroupsController_getParticipants",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get a list of participants by in the group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/participants/add": {
            "post": {
                "operationId": "GroupsController_addParticipants",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Adds a list of participants by ID to the group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/participants/remove": {
            "post": {
                "operationId": "GroupsController_removeParticipants",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParticipantsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Removes a list of participants by ID to the group.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/settings/security/info-admin-only": {
            "get": {
                "operationId": "GroupsController_getInfoAdminOnly",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsSecurityChangeInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Gets the group settings to only allow admins to edit group info (title, description, photo).",
                "tags": [
                    "groups"
                ]
            },
            "put": {
                "operationId": "GroupsController_setInfoAdminOnly",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsSecurityChangeInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Updates the group settings to only allow admins to edit group info (title, description, photo).",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/settings/security/messages-admin-only": {
            "get": {
                "operationId": "GroupsController_getMessagesAdminOnly",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsSecurityChangeInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Gets the group settings to only allow admins to send messages.",
                "tags": [
                    "groups"
                ]
            },
            "put": {
                "operationId": "GroupsController_setMessagesAdminOnly",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsSecurityChangeInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Updates the group settings to only allow admins to send messages.",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/groups/{id}/subject": {
            "put": {
                "operationId": "GroupsController_setSubject",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Updates the group subject.\nReturns true if the subject was properly updated. This can return false if the user does not have the necessary permissions.\n",
                "tags": [
                    "groups"
                ]
            }
        },
        "/api/{session}/presence": {
            "get": {
                "operationId": "PresenceController_getPresenceAll",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/WAHAChatPresences"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get all subscribed presence information.",
                "tags": [
                    "presence"
                ]
            },
            "post": {
                "operationId": "PresenceController_setPresence",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHASessionPresence"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Set session presence",
                "tags": [
                    "presence"
                ]
            }
        },
        "/api/{session}/presence/{chatId}": {
            "get": {
                "operationId": "PresenceController_getPresence",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WAHAChatPresences"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Get the presence for the chat id. If it hasn't been subscribed - it also subscribes to it.",
                "tags": [
                    "presence"
                ]
            }
        },
        "/api/{session}/presence/{chatId}/subscribe": {
            "post": {
                "operationId": "PresenceController_subscribe",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    },
                    {
                        "in": "path",
                        "name": "chatId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Subscribe to presence events for the chat.",
                "tags": [
                    "presence"
                ]
            }
        },
        "/api/{session}/status/image": {
            "post": {
                "operationId": "StatusController_sendImageStatus",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImageStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send image status.",
                "tags": [
                    "status"
                ]
            }
        },
        "/api/{session}/status/text": {
            "post": {
                "operationId": "StatusController_sendTextStatus",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TextStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send text status.",
                "tags": [
                    "status"
                ]
            }
        },
        "/api/{session}/status/video": {
            "post": {
                "operationId": "StatusController_sendVideoStatus",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VideoStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send video status.",
                "tags": [
                    "status"
                ]
            }
        },
        "/api/{session}/status/voice": {
            "post": {
                "operationId": "StatusController_sendVoiceStatus",
                "parameters": [
                    {
                        "description": "WhatsApp session name",
                        "in": "path",
                        "name": "session",
                        "required": true,
                        "schema": {
                            "default": "default"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoiceStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ],
                "summary": "Send voice status.",
                "tags": [
                    "status"
                ]
            }
        },
        "/health": {
            "get": {
                "operationId": "HealthController_check",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "details": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "error": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {},
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "info": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "status": {
                                            "example": "ok",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "The Health Check is successful"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "details": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                },
                                                "redis": {
                                                    "message": "Could not connect",
                                                    "status": "down"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "error": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {
                                                "redis": {
                                                    "message": "Could not connect",
                                                    "status": "down"
                                                }
                                            },
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "info": {
                                            "additionalProperties": {
                                                "additionalProperties": true,
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "status"
                                                ],
                                                "type": "object"
                                            },
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "nullable": true,
                                            "type": "object"
                                        },
                                        "status": {
                                            "example": "error",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "The Health Check is not successful"
                    }
                },
                "tags": [
                    "other"
                ]
            }
        }
    },
    "servers": [],
    "tags": [
        {
            "description": "Control WhatsApp sessions",
            "name": "sessions"
        },
        {
            "description": "Authentication",
            "name": "auth"
        },
        {
            "description": "Get screenshot of WhatsApp and show QR code",
            "name": "screenshot"
        },
        {
            "description": "Chatting methods",
            "name": "chatting"
        },
        {
            "description": "Status (aka stories) methods. <b>NOWEB</b> engine only!",
            "name": "status"
        },
        {
            "description": "Chats methods",
            "name": "chats"
        },
        {
            "description": "Contacts methods.<br>\n                Use phone number (without +) or phone number and `@c.us` at the end as `contactId`.<br>\n                'E.g: `12312312310` OR `12312312310@c.us`<br>",
            "name": "contacts"
        },
        {
            "description": "Groups methods.<br>",
            "name": "groups"
        },
        {
            "description": "Presence information",
            "name": "presence"
        },
        {
            "description": "Other methods",
            "name": "other"
        }
    ],
    "webhooks": {
        "group.join": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookGroupJoin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "Some one join a group."
            }
        },
        "group.leave": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookGroupLeave"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "Some one left a group."
            }
        },
        "message": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "Incoming message."
            }
        },
        "message.ack": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookMessageAck"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "Receive events when server or recipient gets the message, read or played it."
            }
        },
        "message.any": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookMessageAny"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "Fired on all message creations, including your own."
            }
        },
        "message.reaction": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookMessageReaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "The event is triggered when a user reacts or removes a reaction."
            }
        },
        "message.revoked": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookMessageRevoked"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "The event is triggered when a user, whether it be you or any other participant, revokes a previously sent message."
            }
        },
        "poll.vote": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookPollVote"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "With this event, you receive new votes for the poll sent."
            }
        },
        "poll.vote.failed": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookPollVoteFailed"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "There may be cases when it fails to decrypt a vote from the user. Read more about how to handle such events in the documentations."
            }
        },
        "presence.update": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookPresenceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "The most recent presence information for a chat."
            }
        },
        "session.status": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookSessionStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "The event is triggered when the session status changes."
            }
        },
        "state.change": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WAHAWebhookStateChange"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                },
                "summary": "It\u2019s an internal engine\u2019s state, not session status."
            }
        }
    }
}